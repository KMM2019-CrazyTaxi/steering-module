
stm_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000029e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000008  00800100  00800100  00000312  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  00000312  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000030  00000000  00000000  00000342  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000764  00000000  00000000  00000372  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000142  00000000  00000000  00000ad6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000002f1  00000000  00000000  00000c18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000044  00000000  00000000  00000f0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001e8  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000003c  00000000  00000000  00001138  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  00001174  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a8 30       	cpi	r26, 0x08	; 8
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	17 d0       	rcall	.+46     	; 0xd8 <main>
  aa:	f7 c0       	rjmp	.+494    	; 0x29a <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <speed_controller>:
	// Right directions between 0-127 and left directions between 0-(-127),
	// OCR1B = 18509(the compare value with the counter ICR1 : counter_limit_const counter_limit_const) give neutral direction.
	// The far right direction will be near to OCR1B = 18219 (when direction = 127) which gives a PWM signal  = (2ms high signal from 20ms),
	// while the far left will be near to OCR1B = 18981 (when direction = -127) which gives a PWM signal  = (1ms high signal from 20ms).

	OCR1B = NEUTRAL_direction - (direction * acceleration_rate_direction);
  ae:	20 91 04 01 	lds	r18, 0x0104
  b2:	30 91 05 01 	lds	r19, 0x0105
  b6:	68 2f       	mov	r22, r24
  b8:	62 03       	mulsu	r22, r18
  ba:	a0 01       	movw	r20, r0
  bc:	63 9f       	mul	r22, r19
  be:	50 0d       	add	r21, r0
  c0:	11 24       	eor	r1, r1
  c2:	80 91 06 01 	lds	r24, 0x0106
  c6:	90 91 07 01 	lds	r25, 0x0107
  ca:	84 1b       	sub	r24, r20
  cc:	95 0b       	sbc	r25, r21
  ce:	90 93 89 00 	sts	0x0089, r25
  d2:	80 93 88 00 	sts	0x0088, r24
  d6:	08 95       	ret

000000d8 <main>:
	
}

int main(void)
{	
	DDRD |= 0xFF;
  d8:	8a b1       	in	r24, 0x0a	; 10
  da:	8f ef       	ldi	r24, 0xFF	; 255
  dc:	8a b9       	out	0x0a, r24	; 10
	TCCR1A |=   (1<<WGM11) | (1<<COM1B0 |1<<COM1B1) | (1<<COM1A0 |1<<COM1A1);
  de:	e0 e8       	ldi	r30, 0x80	; 128
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	82 6f       	ori	r24, 0xF2	; 242
  e6:	80 83       	st	Z, r24
	TCCR1B |=   (1<<WGM12) | (1<<WGM13) | (1<<CS10);
  e8:	e1 e8       	ldi	r30, 0x81	; 129
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	89 61       	ori	r24, 0x19	; 25
  f0:	80 83       	st	Z, r24
	ICR1 = F_CPU/50; //19999 ; // 50 hz needed for the motor and controlling servo.
  f2:	e6 e8       	ldi	r30, 0x86	; 134
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 e2       	ldi	r24, 0x20	; 32
  f8:	9e e4       	ldi	r25, 0x4E	; 78
  fa:	91 83       	std	Z+1, r25	; 0x01
  fc:	80 83       	st	Z, r24
	
	
	 NEUTRAL = ICR1-1490 ; // pulse width 1.5ms
  fe:	80 81       	ld	r24, Z
 100:	91 81       	ldd	r25, Z+1	; 0x01
 102:	82 5d       	subi	r24, 0xD2	; 210
 104:	95 40       	sbci	r25, 0x05	; 5
 106:	90 93 07 01 	sts	0x0107, r25
 10a:	80 93 06 01 	sts	0x0106, r24
	 acceleration_rate_speed = 10;
 10e:	8a e0       	ldi	r24, 0x0A	; 10
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	90 93 05 01 	sts	0x0105, r25
 116:	80 93 04 01 	sts	0x0104, r24
	 acceleration_rate_direction = 4;
 11a:	84 e0       	ldi	r24, 0x04	; 4
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	90 93 03 01 	sts	0x0103, r25
 122:	80 93 02 01 	sts	0x0102, r24
	 NEUTRAL_direction = ICR1-1430; // pulse width 1,43
 126:	80 81       	ld	r24, Z
 128:	91 81       	ldd	r25, Z+1	; 0x01
 12a:	86 59       	subi	r24, 0x96	; 150
 12c:	95 40       	sbci	r25, 0x05	; 5
 12e:	90 93 01 01 	sts	0x0101, r25
 132:	80 93 00 01 	sts	0x0100, r24
	signed char aa = -1; 
	//signed char z = 0 ; // no movement.
	
	
	//OCR1B = NEUTRAL; // 
	OCR1B = NEUTRAL_direction; // 
 136:	90 93 8b 00 	sts	0x008B, r25
 13a:	80 93 8a 00 	sts	0x008A, r24
	OCR1A = NEUTRAL;  // 
 13e:	80 91 06 01 	lds	r24, 0x0106
 142:	90 91 07 01 	lds	r25, 0x0107
 146:	90 93 89 00 	sts	0x0089, r25
 14a:	80 93 88 00 	sts	0x0088, r24

	
		
		
		
		speed_controller(z);
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	ae df       	rcall	.-164    	; 0xae <speed_controller>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 152:	2f e3       	ldi	r18, 0x3F	; 63
 154:	8d e0       	ldi	r24, 0x0D	; 13
 156:	93 e0       	ldi	r25, 0x03	; 3
 158:	21 50       	subi	r18, 0x01	; 1
 15a:	80 40       	sbci	r24, 0x00	; 0
 15c:	90 40       	sbci	r25, 0x00	; 0
 15e:	e1 f7       	brne	.-8      	; 0x158 <main+0x80>
 160:	00 c0       	rjmp	.+0      	; 0x162 <main+0x8a>
 162:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(aa);
 164:	8f ef       	ldi	r24, 0xFF	; 255
 166:	a3 df       	rcall	.-186    	; 0xae <speed_controller>
 168:	2f e3       	ldi	r18, 0x3F	; 63
 16a:	8d e0       	ldi	r24, 0x0D	; 13
 16c:	93 e0       	ldi	r25, 0x03	; 3
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <main+0x96>
 176:	00 c0       	rjmp	.+0      	; 0x178 <main+0xa0>
 178:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(bb);
 17a:	8e ef       	ldi	r24, 0xFE	; 254
 17c:	98 df       	rcall	.-208    	; 0xae <speed_controller>
 17e:	2f e3       	ldi	r18, 0x3F	; 63
 180:	8d e0       	ldi	r24, 0x0D	; 13
 182:	93 e0       	ldi	r25, 0x03	; 3
 184:	21 50       	subi	r18, 0x01	; 1
 186:	80 40       	sbci	r24, 0x00	; 0
 188:	90 40       	sbci	r25, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <main+0xac>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0xb6>
 18e:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(cc);
 190:	8d ef       	ldi	r24, 0xFD	; 253
 192:	8d df       	rcall	.-230    	; 0xae <speed_controller>
 194:	2f e3       	ldi	r18, 0x3F	; 63
 196:	8d e0       	ldi	r24, 0x0D	; 13
 198:	93 e0       	ldi	r25, 0x03	; 3
 19a:	21 50       	subi	r18, 0x01	; 1
 19c:	80 40       	sbci	r24, 0x00	; 0
 19e:	90 40       	sbci	r25, 0x00	; 0
 1a0:	e1 f7       	brne	.-8      	; 0x19a <main+0xc2>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <main+0xcc>
 1a4:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(dd);
 1a6:	86 ef       	ldi	r24, 0xF6	; 246
 1a8:	82 df       	rcall	.-252    	; 0xae <speed_controller>
 1aa:	2f e3       	ldi	r18, 0x3F	; 63
 1ac:	8d e0       	ldi	r24, 0x0D	; 13
 1ae:	93 e0       	ldi	r25, 0x03	; 3
 1b0:	21 50       	subi	r18, 0x01	; 1
 1b2:	80 40       	sbci	r24, 0x00	; 0
 1b4:	90 40       	sbci	r25, 0x00	; 0
 1b6:	e1 f7       	brne	.-8      	; 0x1b0 <main+0xd8>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <main+0xe2>
 1ba:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(ee);
 1bc:	85 ef       	ldi	r24, 0xF5	; 245
 1be:	77 df       	rcall	.-274    	; 0xae <speed_controller>
 1c0:	2f e3       	ldi	r18, 0x3F	; 63
 1c2:	8d e0       	ldi	r24, 0x0D	; 13
 1c4:	93 e0       	ldi	r25, 0x03	; 3
 1c6:	21 50       	subi	r18, 0x01	; 1
 1c8:	80 40       	sbci	r24, 0x00	; 0
 1ca:	90 40       	sbci	r25, 0x00	; 0
 1cc:	e1 f7       	brne	.-8      	; 0x1c6 <main+0xee>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0xf8>
 1d0:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(ff);
 1d2:	82 ef       	ldi	r24, 0xF2	; 242
 1d4:	6c df       	rcall	.-296    	; 0xae <speed_controller>
 1d6:	2f e3       	ldi	r18, 0x3F	; 63
 1d8:	8d e0       	ldi	r24, 0x0D	; 13
 1da:	93 e0       	ldi	r25, 0x03	; 3
 1dc:	21 50       	subi	r18, 0x01	; 1
 1de:	80 40       	sbci	r24, 0x00	; 0
 1e0:	90 40       	sbci	r25, 0x00	; 0
 1e2:	e1 f7       	brne	.-8      	; 0x1dc <main+0x104>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <main+0x10e>
 1e6:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(gg);
 1e8:	8c ee       	ldi	r24, 0xEC	; 236
 1ea:	61 df       	rcall	.-318    	; 0xae <speed_controller>
 1ec:	2f e3       	ldi	r18, 0x3F	; 63
 1ee:	8d e0       	ldi	r24, 0x0D	; 13
 1f0:	93 e0       	ldi	r25, 0x03	; 3
 1f2:	21 50       	subi	r18, 0x01	; 1
 1f4:	80 40       	sbci	r24, 0x00	; 0
 1f6:	90 40       	sbci	r25, 0x00	; 0
 1f8:	e1 f7       	brne	.-8      	; 0x1f2 <main+0x11a>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0x124>
 1fc:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(hh);
 1fe:	82 ee       	ldi	r24, 0xE2	; 226
 200:	56 df       	rcall	.-340    	; 0xae <speed_controller>
 202:	2f e3       	ldi	r18, 0x3F	; 63
 204:	8d e0       	ldi	r24, 0x0D	; 13
 206:	93 e0       	ldi	r25, 0x03	; 3
 208:	21 50       	subi	r18, 0x01	; 1
 20a:	80 40       	sbci	r24, 0x00	; 0
 20c:	90 40       	sbci	r25, 0x00	; 0
 20e:	e1 f7       	brne	.-8      	; 0x208 <main+0x130>
 210:	00 c0       	rjmp	.+0      	; 0x212 <main+0x13a>
 212:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(jj);
 214:	88 ed       	ldi	r24, 0xD8	; 216
 216:	4b df       	rcall	.-362    	; 0xae <speed_controller>
 218:	2f e3       	ldi	r18, 0x3F	; 63
 21a:	8d e0       	ldi	r24, 0x0D	; 13
 21c:	93 e0       	ldi	r25, 0x03	; 3
 21e:	21 50       	subi	r18, 0x01	; 1
 220:	80 40       	sbci	r24, 0x00	; 0
 222:	90 40       	sbci	r25, 0x00	; 0
 224:	e1 f7       	brne	.-8      	; 0x21e <main+0x146>
 226:	00 c0       	rjmp	.+0      	; 0x228 <main+0x150>
 228:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(kk);
 22a:	8e ec       	ldi	r24, 0xCE	; 206
 22c:	40 df       	rcall	.-384    	; 0xae <speed_controller>
 22e:	2f e3       	ldi	r18, 0x3F	; 63
 230:	8d e0       	ldi	r24, 0x0D	; 13
 232:	93 e0       	ldi	r25, 0x03	; 3
 234:	21 50       	subi	r18, 0x01	; 1
 236:	80 40       	sbci	r24, 0x00	; 0
 238:	90 40       	sbci	r25, 0x00	; 0
 23a:	e1 f7       	brne	.-8      	; 0x234 <main+0x15c>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <main+0x166>
 23e:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(ll);
 240:	8a eb       	ldi	r24, 0xBA	; 186
 242:	35 df       	rcall	.-406    	; 0xae <speed_controller>
 244:	2f e3       	ldi	r18, 0x3F	; 63
 246:	8d e0       	ldi	r24, 0x0D	; 13
 248:	93 e0       	ldi	r25, 0x03	; 3
 24a:	21 50       	subi	r18, 0x01	; 1
 24c:	80 40       	sbci	r24, 0x00	; 0
 24e:	90 40       	sbci	r25, 0x00	; 0
 250:	e1 f7       	brne	.-8      	; 0x24a <main+0x172>
 252:	00 c0       	rjmp	.+0      	; 0x254 <main+0x17c>
 254:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(mm);
 256:	80 eb       	ldi	r24, 0xB0	; 176
 258:	2a df       	rcall	.-428    	; 0xae <speed_controller>
 25a:	2f e3       	ldi	r18, 0x3F	; 63
 25c:	8d e0       	ldi	r24, 0x0D	; 13
 25e:	93 e0       	ldi	r25, 0x03	; 3
 260:	21 50       	subi	r18, 0x01	; 1
 262:	80 40       	sbci	r24, 0x00	; 0
 264:	90 40       	sbci	r25, 0x00	; 0
 266:	e1 f7       	brne	.-8      	; 0x260 <main+0x188>
 268:	00 c0       	rjmp	.+0      	; 0x26a <main+0x192>
 26a:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(nn);
 26c:	86 ea       	ldi	r24, 0xA6	; 166
 26e:	1f df       	rcall	.-450    	; 0xae <speed_controller>
 270:	2f e3       	ldi	r18, 0x3F	; 63
 272:	8d e0       	ldi	r24, 0x0D	; 13
 274:	93 e0       	ldi	r25, 0x03	; 3
 276:	21 50       	subi	r18, 0x01	; 1
 278:	80 40       	sbci	r24, 0x00	; 0
 27a:	90 40       	sbci	r25, 0x00	; 0
 27c:	e1 f7       	brne	.-8      	; 0x276 <main+0x19e>
 27e:	00 c0       	rjmp	.+0      	; 0x280 <main+0x1a8>
 280:	00 00       	nop
		_delay_ms (1000);	
		speed_controller(oo);
 282:	8c e9       	ldi	r24, 0x9C	; 156
 284:	14 df       	rcall	.-472    	; 0xae <speed_controller>
 286:	2f e3       	ldi	r18, 0x3F	; 63
 288:	8d e0       	ldi	r24, 0x0D	; 13
 28a:	93 e0       	ldi	r25, 0x03	; 3
 28c:	21 50       	subi	r18, 0x01	; 1
 28e:	80 40       	sbci	r24, 0x00	; 0
 290:	90 40       	sbci	r25, 0x00	; 0
 292:	e1 f7       	brne	.-8      	; 0x28c <main+0x1b4>
 294:	00 c0       	rjmp	.+0      	; 0x296 <main+0x1be>
 296:	00 00       	nop
 298:	5a cf       	rjmp	.-332    	; 0x14e <main+0x76>

0000029a <_exit>:
 29a:	f8 94       	cli

0000029c <__stop_program>:
 29c:	ff cf       	rjmp	.-2      	; 0x29c <__stop_program>
